{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mis notas sobre Linux trabajando con Ubuntu","text":"<p>Esta web no es mas que el t\u00edtulo, o sea una notas muy r\u00e1pidas de cosas que he ido viendo en Linux y que me resultan \u00fatiles.</p> <p>No son tutoriales, ni apuntes ni nada similar sobre Linux, pero cuando he tenido que hacer cosas he seguido los pasos que aqu\u00ed pongo y me han resuelto la tarea.</p>"},{"location":"A20_22/","title":"Actualizar Ubuntu 20.04 a Ubuntu 22.04","text":"<p>Antes de nada debemos tener presente que el proceso puede provocar perdida de datos por lo que lo mas apropiado es sacar copia de seguridad antes de hacer nada.</p> <p>L\u00f3gicamente, y salvo los problemas que ponga en estas notas, todo ha ido bien en mi caso.</p> <p>Lo primer es tener bien actualizado nuestro sistema sin ning\u00fan tipo de error o problema. Para ello abrimos una terminal y ejecutamos los comandos update y upgrade. En la figura 1 vemos el resultado que debemos tener.</p> <p> <p> Figura 1. Comandos update y upgrade en un sistema bien actualizado</p> <p></p> <p>Podemos configurar en el fichero /etc/update-manager/release-upgrades como queremos trabajar con las actualizaciones seg\u00fan configuremos el 'Prompt' entre las opciones que vemos en la Figura 2.</p> <p> <p> Figura 2. Opciones de configuraci\u00f3n del Prompt en release-upgrades</p> <p></p> <p>Esto no es mas que el comportamiento predeterminado para la actualizaci\u00f3n de versiones, que tiene como opciones v\u00e1lidas las siguientes:</p> <ul> <li> <p>never. No se permite ni verificar ni actualizar</p> </li> <li> <p>normal. Se comprueba si hay una nueva versi\u00f3n disponible y si se encuentran varias el actualizador intentar\u00e1 actualizar a la versi\u00f3n que suceda inmediatamente a la que se est\u00e1 ejecutando actualmente.</p> </li> <li> <p>lts. Comprueba si hay disponible una nueva versi\u00f3n LTS posterior a la que se est\u00e9 ejecutando actualmente, aunque esta no sea LTS. Las siglas LTS indican que la versi\u00f3n tiene soporte a largo plazo (Long Time Support). En Ubuntu las versiones LTS tienen soporte y son actualizadas durante 5 a\u00f1os mientras que las versiones normales tienen soporte durante 9 meses, lo  que no significa que sea una versi\u00f3n que funcione mal sino que deberemos actualizar en un plazo corto de tiempo.</p> </li> </ul> <p>A continuaci\u00f3n procedemos a ejecutar la actualizaci\u00f3n escribiendo en una terminal:</p> <pre><code>sudo do-release-upgrade\n</code></pre> <p>Hay que tener en cuenta que el proceso puede ser largo y que no es totalmente desatendido y en algunos momentos nos preguntar\u00e1 que hacer, raz\u00f3n por la que debemos estar atentos a la pantalla del ordenador.</p> <p>Una vez finalizado el proceso probablemente nos pregunte si queremos reiniciar el sistema, a lo que debemos contestar que si para que se apliquen todas las actualizaciones de forma correcta. Una vez reiniciado el ordenador podemos comprobar la versi\u00f3n instalada de la forma que vemos en la Figura 3.</p> <p> <p> Figura 3. Comprobaci\u00f3n de la versi\u00f3n de Ubuntu instalada</p> <p></p> <p>Si todo ha transcurrido con normalidad debemos tener instalado como sistema operativo la versi\u00f3n Ubuntu 22.04 LTS denominada \"Jammy Jellyfish\" cuyo logo vemos en la Figura 4.</p> <p> <p> Figura 4. Ubuntu 22.04 LTS denominada \"Jammy Jellyfish\"</p> <p></p> <p>Aunque no lo he probado el proceso seguido desde la terminal de comandos debe valer para todos los sabores de Ubuntu.</p>"},{"location":"A20_22/#solucion-de-errores-apt-update-comunes","title":"Soluci\u00f3n de errores apt update comunes","text":"<p>Si cuando hacemos update y upgrade obtenemos una ventana con errores es porque el apt tiene alg\u00fan error t\u00edpico. En algunos casos en la propia ventana de errores nos va a indicar como solucionarlo pero si a\u00fan as\u00ed siguen apareciendo lo que debemos hacer es restaurar el comando a su origen. Para este fin vamos a utilizar el comando rm con algunas de sus opciones. El comando rm (remove) se utiliza para eliminar archivos y directorios.  </p> <p>El primer comando que debemos ejecutar en una terminal para restaurar apt update es:</p> <pre><code>sudo rm /etc/apt/sources.list\n</code></pre> <p>Cuando pulsamos 'Enter' lo que hacemos es eliminar el archivo sources.list que tenemos en /etc/apt/.</p> <p>Ahora tecleamos:</p> <pre><code>sudo rm /etc/apt/sources.list.d/* -vf\n</code></pre> <p>Eliminamos sources.list.d en el mismo directorio pero con los par\u00e1metros vf. La v es de 'verbose' o modo detallado, es decir nos explica en todo momento las acciones que se est\u00e1n ejecutando y la f corresponde a 'force', o sea que lo elimina sin confirmaci\u00f3n.</p> <p>En la web existen infinidad de p\u00e1ginas donde consultar comandos de Linux y en la webgrafia he puesto enlace a un par de ellas.</p> <p>Ahora vamos a escribir en la terminal el comando siguiente:</p> <pre><code>sudo software-properties-gtk\n</code></pre> <p>Esto nos devolver\u00e1 la ventana que vemos en la Figura 5.</p> <p> <p> Figura 5. Ventana de Software y actualizaciones reiniciada</p> <p></p> <p>Aqu\u00ed procedemos a configurar como vemos en la Figura 6.</p> <p> <p> Figura 6. Ventana de Software y actualizaciones: pesta\u00f1a Software de Ubuntu</p> <p></p> <p>En la Figura 7 vemos la configuraci\u00f3n establecida en mi caso para las actualizaciones y se destaca la fecha final de soporte y actualizaciones para esta versi\u00f3n LTS.</p> <p> <p> Figura 6. Ventana de Software y actualizaciones: pesta\u00f1a Actualizaciones</p> <p></p> <p>Cerramos la ventana anterior y ejecutamos desde la terminal el comando siguiente:</p> <pre><code>sudo apt update\n</code></pre> <p>El sistema deber\u00eda funcionar con normalidad a partir de este momento.</p>"},{"location":"A20_22/#aviso-importante","title":"Aviso importante","text":"<p>Aunque tengamos \u00e9xito en el proceso descrito es muy probable que algunas aplicaciones no funcionen correctamente y lo que aconsejo, dada la rapidez con la que se puede hacer, es eliminarlas e instalarlas de nuevo.</p>"},{"location":"A20_22/#webgrafia","title":"Webgrafia","text":"<ul> <li> <p>Cambiate a Linux</p> </li> <li> <p>Ayuda Linux</p> </li> <li> <p>programador clic</p> </li> <li> <p>https://tecnonautas.net/</p> </li> <li> <p>Una web 100% recomendable es Tutoriales Ubuntu, con infinidad de tutoriales en Espa\u00f1ol.</p> </li> </ul>"},{"location":"archimagen/","title":"Los archivos AppImage no funcionan","text":"<p>El formato AppImage brinda una forma de ejecutar aplicaciones en cualquier distribuci\u00f3n Linux sin necesidad de instalaci\u00f3n a trav\u00e9s de paquetes DEB/RPM. ES decir, AppImage es un formato de paquete de software universal o lo que es lo mismo, una imagen comprimida en la que est\u00e1n incluidas todas las dependencias y bibliotecas necesarias para que el programa funcione.</p> <p>El proceso para usar AppImage es sencillo y basta seguir estos pasos:</p> <p>Paso 1. Descargamos el paquete .appimage. Tenemos muchisimos sitios de donde podemos descargar en este formato como por ejemplo, Arduino, FreeCAD, Prusa Slicer o cualquiera de los que tenemos en este listado.</p> <p>Paso 2. Debemos dar permiso de ejecuci\u00f3n al archivo .appimage descargado ya que no los tendr\u00e1. No es necesario ser root para hacerlo. Si intentamos ejecutar un archivo sin darle permiso nos aparecer\u00e1 el mensaje que vemos en la imagen siguiente:</p> <p> <p></p> <p>Archivo .appimage sin permiso de ejecuci\u00f3n</p> <p></p> <p>Para hacer un archivo .appimage ejecutable nos situamos sobre el nombre del archivo, clicamos bot\u00f3n derecho del rat\u00f3n y escogemos la opci\u00f3n 'Propiedades', tal y como vemos en la imagen siguiente:</p> <p> <p></p> <p>Acceso a Propiedades en un archivo .appimage</p> <p></p> <p>Esto nos despliega una ventana en la que debemos dirigirnos a la pesta\u00f1a 'Permisos' y marcar la opci\u00f3n que se muestra en la imagen siguiente:</p> <p> <p></p> <p>Activar permiso de ejecuci\u00f3n en un .appimage</p> <p></p> <p>Paso 3. Ejecutar el archivo y se lanzar\u00e1 la aplicaci\u00f3n correspondiente. Si estamos en Ubuntu 22.04 LTS es muy posible que No se pueda ejecutar el archivo AppImage al que acabamos de dar permiso de ejecuci\u00f3n.</p> <p>El problema radica en que por defecto Ubuntu 22.04 no incluye la biblioteca FUSE que es la encargada de proporcionar una interfaz para que los programas exporten un sistema de archivos virtual al kernel de Linuxy justo as\u00ed es como funciona AppImage, en un sistema de archivos virtuales por lo que sin esta biblioteca AppImage no funciona.</p> <p>Es muy sencillo solucionar el problema pues basta con abrir una terminal, teclear sudo apt install libfuse2, pulsar Enter y se instalar\u00e1 la biblioteca tal y como vemos en la figura siguiente.</p> <pre><code>sudo apt install libfuse2\n</code></pre> <p> <p></p> <p>Instalaci\u00f3n de la biblioteca FUSE</p> <p></p> <p>Si el archivo .appimage todav\u00eda no se ejecuta es muy probable que la AppImage descargada tenga alg\u00fan problema que impide su ejecuci\u00f3n. Lo aconsejado es probar con otros archivos de este tipo y ver si el sistema est\u00e1 funcionando correctamente.</p> <p>Para profundizar un poco mas en el problema de ejecuci\u00f3n de AppImage podemos intentar su ejecuci\u00f3n de la misma manera que ejecuta un script de shell desde una terminal.</p> <pre><code>./nombre_aplicacion.appimage\n</code></pre> <p>El an\u00e1lisis del error puede ser de mucha ayuda pero puede requerir conocimientos avanzados de Linux.</p>"},{"location":"ch340/","title":"Dispositivos CH340 USB no funcionan en Ubuntu 22.04","text":"<p>El soporte (en Ubuntu 20.04 era nativo) para dispositivos CH340 USB a adaptador serie no genera un /dev/ttyUSB0 cuando partimos de instalaci\u00f3n limpia.</p> <p>Cuando tenemos una placa con el driver CH340 conectada al USB y desde una terminal hacemos <code>ls /dev</code> no nos lista una entrada ttyUSB0.</p> <p>Si hacemos <code>lsusb</code> nos va a devolver algo como <code>Bus 003 Device 002: ID 1a86:7523 QinHeng Electronics CH340 serial converter</code>.</p> <p>Y podemos comprobar como el m\u00f3dulo <code>ch34x</code> est\u00e1 cargado si hacemos <code>lsmod</code>. Cualquier intento de crear manualmente el m\u00f3dulo va a resultar infructuoso</p> <p>De nuevo el conflicto est\u00e1 en un conflicto entre la identificaci\u00f3n del producto con un chip basado en CH340 y el lector de pantalla Braille. Si hemos ejecutado</p> <p> <p><code>sudo apt remove brltty</code> </p> <p></p> <p>y no estamos utilizando una pantalla Braille debemos editar el fichero de reglas de brttty y realizar una modificaci\u00f3n para asegurar que se soportan dispositivos CH340. Esto solamente lo podemos hacer como superusuario dado que se trata de un archivo del sistema. El proceso a seguir es:</p> <ol> <li>Abrimos para editar el archivo <code>/usr/lib/udev/rules.d/85-brltty.rules</code> por ejemplo con el editor nano.</li> <li>Buscamos la l\u00ednea <code>ENV{PRODUCT}==\"1a86/7523/*\", ENV{BRLTTY_BRAILLE_DRIVER}=\"bm\", GOTO=\"brltty_usb_run\"</code> y la ponemos comentada.</li> <li>Reiniciamos el sistema</li> </ol> <p>Esto debe ser suficiente para volver a tener soportados los dispositivos CH340.</p>"},{"location":"close/","title":"Cerrar programas que no responden en Ubuntu 22.04","text":"<p>Cuando se nos presenta este problema y no hay de forma de cerrar el programa de las maneras usuales tenemos que conocer la forma de hacerlo sin recurrir a reiniciar el sistema o cerrar la sesi\u00f3n.</p> <p>Aqu\u00ed vamos a ver rapidamente como hacerlo desde el entorno gr\u00e1fico utilizando la aplicaci\u00f3n <code>Monitor del sistema</code>:</p> <p> <p> Localizar la aplicaci\u00f3n desde Mostrar aplicaciones</p> <p></p> <p>Esta es la informaci\u00f3n que la aplicaci\u00f3n nos da en su 'Acerca de':</p> <p> <p> Monitor del sistema. Acerca de</p> <p></p> <p>Una vez localizada la aplicaci\u00f3n la abrimos y se mostrar\u00e1 una ventana similar a la siguiente, donde se pueden ver los recursos del sistema y su uso actual.</p> <p> <p> Mostrar del sistema. Recursos</p> <p></p> <p>A continuaci\u00f3n vemos la pesta\u00f1a 'Sistema de archivos' y su uso en el equipo que se est\u00e1 ejecutando.</p> <p> <p> Monitor del sistema. Sistema de archivos</p> <p></p> <p>Finalmente vemos la pesta\u00f1a 'Procesos', con el men\u00fa de opciones desplegado. En esta ventana vemos los procesos seg\u00fan nuestra selecci\u00f3n y podemos seleccionar que se muestren las dependencias entre procesos, lo que nos permitir\u00e1 ver si la ejecuci\u00f3n de un proceso depende de la de otro diferente.</p> <p> <p> Monitor del sistema. Procesos</p> <p></p> <p>Cuando tengamos localizado el proceso que nos interesa y con el cursor del rat\u00f3n situado sobre el mismo haremos clic con el bot\u00f3n secundario y se mostrar\u00e1 el men\u00fa contextual que vemos a continuaci\u00f3n.</p> <p> <p> Monitor del sistema. Acciones sobre un proceso</p> <p></p> <p>La opci\u00f3n finalizar est\u00e1 disponible mediante el bot\u00f3n de la parte inferior izquierda.</p> <p>Cuando escogemos una de las opciones se muestra la ventana de aviso siguiente:</p> <p> <p> Monitor del sistema. Confirma o cancelar Detener, finalizar o Matar</p> <p></p> <p>La leyenda del bot\u00f3n cambia para adaptarse a la opci\u00f3n elegida. Una vez aceptada la opci\u00f3n se ejecuta. Se aconseja Finalizar los procesos antes de recurrir a la opci\u00f3n de 'Matar', especialmente si hay posibilidad de perdida de datos.</p>"},{"location":"peek/","title":"Peek no graba el cursor","text":"<p>En Ubuntu 22.04 he estado teniendo un problema con la creaci\u00f3n de gif animados mediante la aplicaci\u00f3n Peek y es que, aunque la opci\u00f3n est\u00e1 claramente marcada en las preferencias, este realmente no aparece en las grabaciones.</p> <p>En la imagen vemos las preferencias de Peek</p> <p> <p> Preferencias de Peek</p> <p></p> <p>La situaci\u00f3n de referencia en cuanto a versiones de Gnome, Peek y tipo de XDG utilizado los vemos a continuaci\u00f3n:</p> <p> <p> Versiones y XDG</p> <p></p> <p>Los comandos utilizados son:</p> <pre><code>gnome-shell --version\npeek -v\necho $XDG_SESSION_TYPE\n</code></pre> <p>La soluci\u00f3n que he encontrado sin tocar casi nada de configuraciones es activar el magnificador. Para ello abrimos la Configuraci\u00f3n y nos dirigimos a accesibilidad y activamos Ampliaci\u00f3n:</p> <p> <p> Opciones de accesibilidad</p> <p></p> <p>Que para que no afecte a la visualizaci\u00f3n he configurado as\u00ed:</p> <p> <p> Opciones de Ampliaci\u00f3n</p> <p></p>"},{"location":"psnap/","title":"Problema con actualizaci\u00f3n de Snap Store","text":"<p>El problema radica en un mensaje de aviso bastante curioso del sistema que viene a decir algo como que:</p> <p> <p>No se puede actualizar \"Snap Store\": no se puede actualizar \"snap-store\": snap \"snap-store\" tiene aplicaciones en ejecuci\u00f3n (ubuntu-software)</p> <p></p> <p>En la imagen siguiente se ha capturado el mismo:</p> <p> <p></p> <p>Problema de actualizaci\u00f3n de Snap Store</p> <p></p> <p>Esto puede ocurrir porque el proceso de almacenamiento instant\u00e1neo se inicia en segundo plano aunque no est\u00e1 haciendo nada.</p> <p>Lo primero que debemos probar es:</p> <pre><code>sudo snap refresh\n</code></pre> <p>Y tambi\u00e9n se puede probar a finalizar ese proceso de almacenamiento instant\u00e1neo con el comando:</p> <pre><code>sudo pkill snap-store \nsudo snap refresh snap-store\n</code></pre> <p>Si lo anterior no funciona podemos matar al demonio snap-store, haciendo:</p> <pre><code>sudo killall snap-store\nsudo snap refresh\n</code></pre> <p>O bien esto:</p> <pre><code>sudo killall snap\nsudo snap refresh snap-store\n</code></pre> <p>O este otro:</p> <pre><code>sudo killall snap-store \nsudo snap refresh snap-store\n</code></pre> <p>Y ya se puede reiniciar el centro de control de software de Ubuntu Snap. Cuidado con los comandos killall si no se controla lo que hacen porque podemos eliminar cosas que no queremos.</p> <p>Otra opci\u00f3n es eliminar la tienda:</p> <pre><code>sudo snap remove snap-store\n</code></pre> <p>Para volver a instalarla con:</p> <pre><code>sudo snap install snap-store\n</code></pre> <p>Hay que tener presente que despu\u00e9s de estos procedimientos la tienda tardar\u00e1 un poco en iniciarse porque tiene que descargarse de nuevo.</p>"},{"location":"pyse/","title":"Problema de funcionamiento de Pyserial","text":"<p>El problema se detecta tras actualizaci\u00f3n de Ubuntu 20.04 LTS a 22.04 LTS que no reconoce la placa ESP32 STEAMakers desde ArduinoBlocks y no es posible programarla. Posteriormente se comprueba que pasa lo mismo en una instalaci\u00f3n limpia de Ubuntu 22.04.</p> <p>La primera sospecha recae en un demonio que incorpora la versi\u00f3n para tarjetas de lectura Braille, que se llama brltty. Se ejecuta desde una terminal:</p> <pre><code>sudo apt remove brltty\n</code></pre> <p>No se producen cambios referentes al problema.</p> <p>Se piensa en esto porque <pre><code>ls /dev\n</code></pre></p> <p>no devuelve una entrada ttyUSB0 teniendo la placa conectada aunque lsusb si devuelve datos referentes al dispositivo y si se hace lsmod se comprueba que el dispositivo est\u00e1 cargado. Esto sucede por un conflicto entre las identificaciones de la placa ESP32 STEAMaker y el lector de pantalla Braille.</p> <p>Mi situaci\u00f3n de partida es:</p> <pre><code>python2 --version\nPython 2.7.18\npython3 --version\nPython 3.10.6\n</code></pre> <p>Al intentar instalar el paquete pyserial recomendado por ArduinoBlocks para la placa con:</p> <pre><code>sudo dpkg -i python-pyserial_3.5-1_all.deb (pyserial de ArduinoBlocks)\n</code></pre> <p>La consola muestra un mensaje similar al siguiente:</p> <pre><code>Seleccionando el paquete python-pyserial previamente no seleccionado.\n(Leyendo la base de datos ... 218964 ficheros o directorios instalados actualmente.)\nPreparando para desempaquetar python-pyserial_3.5-1_all.deb ...\nDesempaquetando python-pyserial (3.5-1) ...\ndpkg: problemas de dependencias impiden la configuraci\u00f3n de python-pyserial:\n\u00a0python-pyserial depende de python (&lt;&lt; 2.8); sin embargo:\n\u00a0\u00a0El paquete `python' no est\u00e1 instalado.\n\u00a0python-pyserial depende de python (&gt;= 2.7); sin embargo:\n\u00a0\u00a0El paquete `python' no est\u00e1 instalado.\n\u00a0python-pyserial depende de python:any (&gt;= 2.6.6-7~).\n\ndpkg: error al procesar el paquete python-pyserial (--install):\n\u00a0problemas de dependencias - se deja sin configurar\nSe encontraron errores al procesar:\n\u00a0python-pyserial \n</code></pre> <p>Indica que no est\u00e1 instalado el paquete python menor a la versi\u00f3n 2.8 y que tampoco lo est\u00e1 para una versi\u00f3n mayor a la 2.7 y que python-pyserial depende de los paquetes python.</p> <p> En cambio al principio est\u00e1 clara la respuesta a las consultas y si que est\u00e1n instalados </p> <p>Realizo un intento de hacer lo mismo con pyserial desintalado, haciendo:</p> <pre><code>sudo apt remove python3-serial\nsudo apt autoclean &amp;&amp; sudo apt autoremove\nsudo apt update\nsudo apt install python3-serial\n</code></pre> <p>Intento hacer lo siguiente:</p> <pre><code>sudo apt install python-serial python3-serial\npython -m pip install pyserial\npython3 -m pip install pyserial\n</code></pre> <p>Y la respuesta es que no puede localizar el paquete pyserial por lo que compruebo, ya que para poder usar pyserial hay que tener estos dos paquetes: python-serial y python3-serial</p> <p>Siempre desde una terminal y con pyserial eliminado, aunque creo que esto da igual sigo la siguiente secuencia:</p> <ul> <li>Actualizar las alternativas de la lista de python con:</li> </ul> <pre><code>sudo update-alternatives --list python\nupdate-alternatives: error: no hay alternativas para python y una lista ade directorios\n</code></pre> <ul> <li>Pido listado de todo lo relacionado con python</li> </ul> <pre><code>ls /usr/bin/python*\n/usr/bin/python2    /usr/bin/python3     /usr/bin/python3-futurize\n/usr/bin/python2.7  /usr/bin/python3.10  /usr/bin/python3-pasteurize\n</code></pre> <p>Es decir que python est\u00e1 en el sistema.</p> <ul> <li>En estas condiciones hago:</li> </ul> <pre><code>sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 2\nsudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nsudo update-alternatives --config python\n</code></pre> <p>Y seleccionamos la alternativa que tenga python3</p> <p>Si ahora hacemos:</p> <pre><code>python --version\n</code></pre> <p>la respuesta debe ser python 3.n.n</p> <p>Ahora ya se puede instalar pyserial con pip3, reiniciar el equipo y que todo vuelva a funcionar sin problema.</p> <pre><code>pip3 install pyserial \n</code></pre> <p>o bien</p> <pre><code>sudo dpkg -i python-pyserial_3.5-1_all.deb\n</code></pre>"},{"location":"shu/","title":"Problema con actualizaci\u00f3n de Snap Store","text":"<p>Es muy posible que tras instalar Shutter en nuestro ordenador en Ubuntu 22.04 tengamos el problema de que este tan solo nos deja capturar el escritorio y la mayor\u00eda de las opciones est\u00e1n desabilitadas, tal y como se aprecia en la im agen siguiente.</p> <p> <p></p> <p>Shutter sin X11 server</p> <p></p> <p>En la imagen anterior vemos el mensaje que nos indica claramente que no se pueden tomar capturas de pantalla sin X11 server.</p> <p>Shutter no puede tomar capturas de pantalla en Ubuntu 22.04 porque ahora se utiliza Wayland como sistema de ventanas predeterminado, en lugar de X11, y Shutter por ahora solo funciona con el sistema de ventanas X11, que anteriormente era el predeterminado de Ubuntu antes de la versi\u00f3n Ubuntu 22.04.</p> <p>Tenemos una soluci\u00f3n sencilla habilitando Wayland en el archivo custom.conf que se encuentra en la ruta etc/gdm3 y que podemos editar copiando la l\u00ednea siguiente en una terminal:</p> <pre><code>sudo nano /etc/gdm3/custom.conf\n</code></pre> <p>En la figura siguiente vemos abierto el archivo y se ha marcado la l\u00ednea que tenemos que descomentar.</p> <p> <p></p> <p>Wayland comentado</p> <p></p> <p>En la figura siguiente vemos la l\u00ednea sin comentario.</p> <p> <p></p> <p>Wayland no comentado</p> <p></p> <p>En estas condiciones guardamos los cambios realizados en el archivo, salimos del editor nano y reseteamos gnome mediante la siguiente orden en una terminal:</p> <pre><code>sudo systemctl restart gdm3\n</code></pre> <p>Ahora podemos ejecutar de nuevo Shutter y comprobar que todas las opciones est\u00e1n activadas, tal y como vemos en la imagen siguiente:</p> <p> <p></p> <p>Shutter sin problemas</p> <p></p>"},{"location":"Miscelanea/about/","title":"Autor","text":"<p>Federico Coca</p> <ul> <li> <p>GitHub</p> </li> <li> <p>Twitter</p> </li> <li> <p>Instagram</p> </li> <li> <p>Mas informaci\u00f3n</p> </li> </ul>"},{"location":"Miscelanea/lic/","title":"Licencias","text":"<ul> <li> <p>Licencia MIT incluida en la creaci\u00f3n del repositorio.</p> </li> <li> <p>Creative Commons Atribuci\u00f3n-CompartirIgual 4.0 International (\"CC BY-SA\"). CC BY-SA 4.0 </p> </li> </ul> <p> <p> </p> <p></p>"},{"location":"Miscelanea/soft/","title":"Software utilizado","text":"<ul> <li> <p>Sistema operativo: Ubuntu en sus distintos sabores</p> </li> <li> <p>Paquete ofim\u00e1tico de referencia: LibreOffice</p> </li> <li> <p>Libreria Material para MkDocs</p> </li> <li> <p>Visual Studio Code</p> </li> <li> <p>Creaci\u00f3n de GIF animados para Ubuntu Peek</p> </li> <li> <p>Sistema principal de capturas de pantalla: Shutter</p> </li> <li> <p>Dibujo 2D vectorial Inkscape</p> </li> <li> <p>Retoque de im\u00e1genes GIMP</p> </li> </ul>"},{"location":"Miscelanea/webgrafia/","title":"Webgraf\u00eda y bibliograf\u00eda","text":"<p>En cada apartado indico la que he seguido y me ha resultado \u00fatil.</p>"}]}